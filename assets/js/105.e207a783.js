(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{490:function(n,o,t){"use strict";t.r(o);var s=t(45),r=Object(s.a)({},(function(){var n=this,o=n.$createElement,t=n._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_75-颜色分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_75-颜色分类"}},[n._v("#")]),n._v(" 75. 颜色分类")]),n._v(" "),t("p",[n._v("// 给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。\n// 此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。\nvar sortColors = function(nums) {\nconst obj = {};")]),n._v(" "),t("p",[n._v("for (let i = 0; i < nums.length; i++) {\nif (obj[nums[i]]) {\nobj[nums[i]] += 1;\n} else {\nobj[nums[i]] = 1;\n}\n}")]),n._v(" "),t("p",[n._v("const arr = Object.keys(obj).sort((a, b) => a - b);")]),n._v(" "),t("p",[n._v("const a = [];\nlet c = 0;")]),n._v(" "),t("p",[n._v("for (let i = 0; i < arr.length; i++) {\nfor (let j = 0; j < obj[arr[i]]; j++) {\nnums[c++] = +arr[i];\n}\n}\n};\nconsole.log(sortColors([2, 0, 2, 1, 1, 0])); // [0,0,1,1,2,2]\nconsole.log(sortColors([2, 0, 1]));")])])}),[],!1,null,null,null);o.default=r.exports}}]);