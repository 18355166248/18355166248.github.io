(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{555:function(n,s,t){"use strict";t.r(s);var e=t(45),l=Object(e.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"合并数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并数组"}},[n._v("#")]),n._v(" 合并数组")]),n._v(" "),t("p",[n._v("var merge = function(nums1, m, nums2, n) {\nlet l1 = 0,\nl2 = 0;\nwhile (l2 < n) {\nif (nums2[l2] < nums1[l1++]) {\nnums1.splice(l1 - 1, 0, nums2[l2++]);\n} else if (l1 >= m) {\nnums1[l1] = nums2[l2++];\n}\n}")]),n._v(" "),t("p",[n._v("return nums1;\n};")]),n._v(" "),t("p",[n._v("const nums1 = [1, 2, 3, 0, 0, 0],\nm = 3,\nnums2 = [2, 5, 6],\nn = 3;")]),n._v(" "),t("p",[n._v("console.log(merge(nums1, m, nums2, n));")])])}),[],!1,null,null,null);s.default=l.exports}}]);