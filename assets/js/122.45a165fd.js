(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{513:function(n,t,r){"use strict";r.r(t);var o=r(45),s=Object(o.a)({},(function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"_94-二叉树的中序遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_94-二叉树的中序遍历"}},[n._v("#")]),n._v(" 94. 二叉树的中序遍历")]),n._v(" "),r("p",[n._v("// 给定一个二叉树的根节点 root ，返回它的 中序 遍历。\nvar inorderTraversal = function(root) {\n// const res = []")]),n._v(" "),r("p",[n._v("// function dfs(val) {\n//   if (!val) return\n//   dfs(val.left)\n//   res.push(val.val)\n//   dfs(val.right)\n// }")]),n._v(" "),r("p",[n._v("// dfs(root)")]),n._v(" "),r("p",[n._v("// return res")]),n._v(" "),r("p",[n._v("const res = []\nconst stack = []")]),n._v(" "),r("p",[n._v("while (root || stack.length) {\nwhile (root) {\nstack.push(root)\nroot = root.left\n}\nconst r = stack.pop()\nres.push(r.val)\nroot = r.right\n}")]),n._v(" "),r("p",[n._v("return res\n}\nconsole.log(\ninorderTraversal({\nval: 1,\nleft: null,\nright: {\nval: 2,\nleft: {\nval: 3,\n},\nrightL: null,\n},\n})\n)")])])}),[],!1,null,null,null);t.default=s.exports}}]);