(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{373:function(t,s,a){t.exports=a.p+"assets/img/dl-dt-dd-ul-ol.c3924bdf.png"},612:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"html面试题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html面试题"}},[t._v("#")]),t._v(" HTML面试题")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#window-onload-window-domcontentloaded"}},[t._v("window.onload, window.DOMContentLoaded")]),n("ul",[n("li",[n("a",{attrs:{href:"#注意"}},[t._v("注意:")])])])]),n("li",[n("a",{attrs:{href:"#html首屏-白屏时间"}},[t._v("html首屏, 白屏时间")])]),n("li",[n("a",{attrs:{href:"#dom-documnet-object-modal-文档对象模型-和cssom-css-object-modal-执行顺序"}},[t._v("Dom(documnet Object Modal 文档对象模型)和Cssom(css Object Modal)执行顺序")]),n("ul",[n("li",[n("a",{attrs:{href:"#优化"}},[t._v("优化")])])])]),n("li",[n("a",{attrs:{href:"#轮播图如何实现"}},[t._v("轮播图如何实现")])]),n("li",[n("a",{attrs:{href:"#hash模式和history模式的区别"}},[t._v("hash模式和history模式的区别")])]),n("li",[n("a",{attrs:{href:"#html-列表中的dl-dt-dd-ul-ol-li区别及应用"}},[t._v("HTML 列表中的dl,dt,dd,ul,ol,li区别及应用")])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"window-onload-window-domcontentloaded"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#window-onload-window-domcontentloaded"}},[t._v("#")]),t._v(" window.onload, window.DOMContentLoaded")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("点击")]),t._v(" "),n("p",[t._v("window.onload的onload属性是一个事件处理程序用于处理window, XMLHttpRequest, "),n("img"),t._v("等元素的加载事件, 当资源已加载时被触发")]),t._v(" "),n("p",[t._v("window.DOMContentLoaded html文档被完全加载和解析之后, 事件触发, 无需等待样式表,图像和子框架的完全加载")]),t._v(" "),n("h4",{attrs:{id:"注意"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意:")]),t._v(" "),n("ul",[n("li",[t._v("在文档装载完成后偶会触发onload时间, 这个时候, 在文档中所有对象都在DOM中, 所有图片, 脚本, 链接, 子框都完成了装载")]),t._v(" "),n("li",[t._v("同步的javascript会暂停DOM的解析")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOMContentLoaded"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DOM fully loaded and parsed"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个同步脚本将延迟DOM的解析。")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以DOMContentLoaded事件稍后将启动。")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])])]),t._v(" "),n("h2",{attrs:{id:"html首屏-白屏时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html首屏-白屏时间"}},[t._v("#")]),t._v(" html首屏, 白屏时间")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("点击")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 白屏计算: 在<head>标签的底部, 也就是</head>的前面即可")]),t._v("\nperformance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseStart "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" performance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigationStart\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//首屏时间")]),t._v("\nwindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" performance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseStart\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])]),t._v(" "),n("h2",{attrs:{id:"dom-documnet-object-modal-文档对象模型-和cssom-css-object-modal-执行顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom-documnet-object-modal-文档对象模型-和cssom-css-object-modal-执行顺序"}},[t._v("#")]),t._v(" Dom(documnet Object Modal 文档对象模型)和Cssom(css Object Modal)执行顺序")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("点击")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly91c2VyLWdvbGQtY2RuLnhpdHUuaW8vMjAyMC8zLzMxLzE3MTMwZTA5N2RlYzFkYzU?x-oss-process=image/format,png",alt:""}})]),t._v(" "),n("p",[t._v("在接收到HTML数据之后的预解析过程中，HTML预解析器识别出来了有CSS文件和JavaScript文件需要下载，然后就同时发起这两个文件的下载请求，需要注意的是，这两个文件的下载过程是重叠的，所以下载时间按照最久的那个文件来算。")]),t._v(" "),n("p",[t._v("但实际上，不管css文件和js文件哪个先下载好，只有css文件下载好了，构建CSSOM树完成了，才能开始解析JavaScript")]),t._v(" "),n("h3",{attrs:{id:"优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),n("ul",[n("li",[t._v("将一些css代码, js代码卸载html文件内联标签里, 减少下载时间")]),t._v(" "),n("li",[t._v("尽量减少文件大小, 可以通过webpack, 将代码压缩")]),t._v(" "),n("li",[t._v("可以将一些不需要再html解析阶段就需要用到的javascript外部文件通过async或者defer, 使得文件可以异步加载, 不影响页面的构建")])])]),t._v(" "),n("h2",{attrs:{id:"轮播图如何实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#轮播图如何实现"}},[t._v("#")]),t._v(" 轮播图如何实现")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("点击")]),t._v(" "),n("p",[t._v("方法1:\n1、将所有的图片并排。\n2、依次平移即可。")]),t._v(" "),n("p",[t._v("方法2:\n1、将所有图片叠在一起。\n2、如果为当前图片则设置 ( z-index )，使其在最顶层。\n3、使用 opacity 过渡代替方法一中的平移过渡( left )：")]),t._v(" "),n("p",[t._v("方法2:\n1、将所有图像复制一轮后并排。\n2、同方法一, 依次平移。\n3、重要：平移一轮到复制的图像的第一张[ 结束后 ] ，立即将 left 设置为 0px ( 我这里用了 jquery，也可不用 )。")])]),t._v(" "),n("h2",{attrs:{id:"hash模式和history模式的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hash模式和history模式的区别"}},[t._v("#")]),t._v(" hash模式和history模式的区别")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("点击")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("原理不同。\nhash模式的实现原理是通过监听hashChange事件来实现的，前端js把当前hash地址对应的组件渲染到浏览器中。history模式是通过调用 history.pushState方法(或者replaceState) 并且 监听popstate事件来实现的。history.pushState会追加历史记录，并更换地址栏地址信息，但是页面不会刷新，需要手动调用地址变化之后的处理函数，并在处理函数内部决定跳转逻辑；监听popstate事件是为了响应浏览器的前进后退功能。")])]),t._v(" "),n("li",[n("p",[t._v("表现不同。\nhash模式会在地址栏中有#号，而history模式没有；同时由于history模式的实现原理用到H5的新特性，所以它对浏览器的兼容性有要求(IE >= 10)。")])]),t._v(" "),n("li",[n("p",[t._v("history模式特点\nhistory模式开发的SPA项目，需要服务器端做额外的配置，否则会出现刷新白屏（链接分享失效）。原因是页面刷新时，浏览器会向服务器真的发出对这个地址的请求，而这个文件资源又不存在，所以就报404。处理方式就由后端做一个保底映射:所有的请求全部拦截到index.html上")])])])]),t._v(" "),n("h2",{attrs:{id:"html-列表中的dl-dt-dd-ul-ol-li区别及应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-列表中的dl-dt-dd-ul-ol-li区别及应用"}},[t._v("#")]),t._v(" HTML 列表中的dl,dt,dd,ul,ol,li区别及应用")]),t._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[t._v("点击")]),t._v(" "),n("p",[t._v("1.无序列表\n无序列表是一个项目的列表，此列项目使用粗体圆点（通常）进行标记。无序列表始于 <ul> 标签。每个列表项始于 <li>。")]),t._v(" "),n("p",[t._v("2.有序列表\n有序列表也是一列项目，列表项目使用数字进行标记。有序列表始于 <ol> 标签。每个列表项始于 <li> 标签。")]),t._v(" "),n("p",[t._v("3.定义列表\n自定义列表不仅仅是一列项目，而是项目及其注释的组合。自定义列表以 <dl> 标签开始。每个自定义列表项以 <dt> 开始。每个自定义列表项的定义以 <dd> 开始。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(373),alt:""}})])])])}),[],!1,null,null,null);s.default=e.exports}}]);