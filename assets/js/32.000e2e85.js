(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{425:function(r,n,o){"use strict";o.r(n);var t=o(45),e=Object(t.a)({},(function(){var r=this,n=r.$createElement,o=r._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("h1",{attrs:{id:"_103-二叉树的锯齿形层序遍历"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_103-二叉树的锯齿形层序遍历"}},[r._v("#")]),r._v(" 103. 二叉树的锯齿形层序遍历")]),r._v(" "),o("p",[r._v("var zigzagLevelOrder = function(root) {\nif (!root) return [];\nconst res = [];\nlet direction = 1; // 1: 从左往右  2: 从右往左")]),r._v(" "),o("p",[r._v("let rootArr = [root];\nwhile (rootArr.length) {\nconst r = [],\nrootCopy = [];\nfor (let i = 0; i < rootArr.length; i++) {\nconst root = rootArr[i];\ndirection === 1 ? r.push(root.val) : r.unshift(root.val);\nif (root.left) rootCopy.push(root.left);\nif (root.right) rootCopy.push(root.right);\n}\nres.push(r);\nrootArr = rootCopy;\ndirection = direction === 1 ? 2 : 1;\n}")]),r._v(" "),o("p",[r._v("return res;\n};\nconsole.log(\nzigzagLevelOrder({\nval: 3,\nleft: {\nval: 9,\n},\nright: {\nval: 20,\nleft: {\nval: 15,\n},\nright: {\nval: 7,\n},\n},\n})\n);\n// [[3], [20, 9], [15, 7]];\nconsole.log(zigzagLevelOrder(null));")])])}),[],!1,null,null,null);n.default=e.exports}}]);