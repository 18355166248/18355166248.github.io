(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{418:function(n,t,r){"use strict";r.r(t);var e=r(45),l=Object(e.a)({},(function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"_107-二叉树的层序遍历-ii"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_107-二叉树的层序遍历-ii"}},[n._v("#")]),n._v(" 107. 二叉树的层序遍历 II")]),n._v(" "),r("p",[n._v("// 给定一个二叉树，返回其节点值自底向上的层序遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）\nvar levelOrderBottom = function(root) {\nconst resArr = []")]),n._v(" "),r("p",[n._v("let arr = [root]\nwhile (arr.length) {\nconst res = []\nconst length = arr.length\nfor (let i = 0; i < length; i++) {\nconst item = arr.shift()\nres.push(item.val)\nitem.left && arr.push(item.left)\nitem.right && arr.push(item.right)\n}\nresArr.unshift(res)\n}")]),n._v(" "),r("p",[n._v("return resArr\n}\nconsole.log(\nlevelOrderBottom({\nval: 3,\nleft: {\nval: 9,\n},\nright: {\nval: 20,\nleft: {\nval: 15,\n},\nright: {\nval: 7,\n},\n},\n})\n)")])])}),[],!1,null,null,null);t.default=l.exports}}]);