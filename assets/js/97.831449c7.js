(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{481:function(n,t,e){"use strict";e.r(t);var a=e(45),l=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"_61-旋转链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_61-旋转链表"}},[n._v("#")]),n._v(" 61. 旋转链表")]),n._v(" "),e("p",[n._v("// 给你一个链表的头节点 head ，旋转链表，将链表每个节点向右移动 k 个位置。\nvar rotateRight = function(head, k) {\nif (k === 0 || !head || !head.next) return head;")]),n._v(" "),e("p",[n._v("let cur = head,\nlength = 1;")]),n._v(" "),e("p",[n._v("while (cur.next) {\ncur = cur.next;\nlength++;\n}\n// 完成闭环\ncur.next = head;")]),n._v(" "),e("p",[n._v("// 表示结尾的点距离新的开始的点的距离\nk = length - (k % length);")]),n._v(" "),e("p",[n._v("while (k > 0) {\ncur = cur.next;\nk--;\n}")]),n._v(" "),e("p",[n._v("const res = cur.next;\ncur.next = null;\nreturn res;\n};")]),n._v(" "),e("p",[n._v("const head1 = {\nval: 0,\nnext: {\nval: 1,\nnext: {\nval: 2,\nnext: null,\n},\n},\n};\nconst head2 = {\nval: 1,\nnext: {\nval: 2,\nnext: {\nval: 3,\nnext: {\nval: 4,\nnext: {\nval: 5,\nnext: null,\n},\n},\n},\n},\n};\nconst head3 = {\nval: 1,\nnext: {\nval: 2,\nnext: null,\n},\n};\nconsole.log(rotateRight(head1, 4));\nconsole.log(rotateRight(head2, 2));\nconsole.log(rotateRight(head3, 1));")])])}),[],!1,null,null,null);t.default=l.exports}}]);