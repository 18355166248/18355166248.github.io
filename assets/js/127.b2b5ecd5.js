(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{511:function(e,n,t){"use strict";t.r(n);var o=t(45),a=Object(o.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"lru缓存机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lru缓存机制"}},[e._v("#")]),e._v(" LRU缓存机制")]),e._v(" "),t("p",[e._v("class ListNode {\nconstructor(key, value) {\nthis.key = key;\nthis.value = value;\nthis.next = null;\nthis.prev = null;\n}\n}\n/*")]),e._v(" "),t("ul",[t("li",[e._v("@param {number} capacity\n*/\nvar LRUCache = function(capacity) {\nthis.max = capacity; // 缓存最大数目\nthis.hash = {}; // 哈希表\nthis.count = 0; // 缓存数目\nthis.dummyHead = new ListNode(); // 虚拟头结点\nthis.dummyTail = new ListNode(); // 虚拟尾结点\nthis.dummyHead.next = this.dummyTail;\nthis.dummyTail.prev = this.dummyHead;\n};")])]),e._v(" "),t("p",[e._v("/**")]),e._v(" "),t("ul",[t("li",[e._v("@param {number} key")]),e._v(" "),t("li",[e._v("@return {number}\n*/\nLRUCache.prototype.get = function(key) {\nlet node = this.hash[key];\nif (!node) return -1;\nthis.moveToHead(node);\nreturn node.value;\n};")])]),e._v(" "),t("p",[e._v("/**")]),e._v(" "),t("ul",[t("li",[e._v("@param {number} key")]),e._v(" "),t("li",[e._v("@param {number} value")]),e._v(" "),t("li",[e._v("@return {void}\n*/\nLRUCache.prototype.put = function(key, value) {\nlet node = this.hash[key];")])]),e._v(" "),t("p",[e._v("// 不存在\nif (!node) {\nif (this.count === this.max) {\n// 存储满了, 删除最远一次使用的数据\nthis.removeLRUItem();\n}\nconst newNode = new ListNode(key, value);\nthis.hash[key] = newNode;\nthis.addToHead(newNode);\nthis.count++;\n} else {\nnode.value = value; // 存在 更新value\nthis.moveToHead(node); // 将数据更新到头部\n}\n};")]),e._v(" "),t("p",[e._v("LRUCache.prototype.moveToHead = function(node) {\nthis.removeFromList(node);\nthis.addToHead(node);\n};\nLRUCache.prototype.removeFromList = function(node) {\nconst prev = node.prev;\nconst next = node.next;\nprev.next = node.next;\nnext.prev = prev;\n};\nLRUCache.prototype.addToHead = function(node) {\nnode.prev = this.dummyHead;\nnode.next = this.dummyHead.next;\nthis.dummyHead.next.prev = node; // 原来真实头节点的prev指向node\nthis.dummyHead.next = node;\n};\nLRUCache.prototype.removeLRUItem = function() {\nconst tail = this.popTail();\ndelete this.hash[tail.key];\nthis.count--;\n};\nLRUCache.prototype.popTail = function() {\nconst tail = this.dummyTail.prev;\nthis.removeFromList(tail);\nreturn tail;\n};")]),e._v(" "),t("p",[e._v("/**")]),e._v(" "),t("ul",[t("li",[e._v("Your LRUCache object will be instantiated and called as such:")]),e._v(" "),t("li",[e._v("var obj = new LRUCache(capacity)")]),e._v(" "),t("li",[e._v("var param_1 = obj.get(key)")]),e._v(" "),t("li",[e._v("obj.put(key,value)\n*/")])])])}),[],!1,null,null,null);n.default=a.exports}}]);