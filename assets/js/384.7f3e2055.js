(window.webpackJsonp=window.webpackJsonp||[]).push([[384],{716:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"低代码搭建简易版"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#低代码搭建简易版"}},[t._v("#")]),t._v(" 低代码搭建简易版")]),t._v(" "),s("p",[t._v("可以参考 "),s("a",{attrs:{href:"http://localhost:8082/notes/Transshipment/FrontEnd/LowCode/XIMA.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("搭建平台如何构建页面"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[t._v("#")]),t._v(" 功能")]),t._v(" "),s("p",[t._v("这篇文章主要介绍了搭建平台的活动页构建过程，即点击了页面配置页右上角的「发布」按钮后是如何构建出可访问的活动页面的")]),t._v(" "),s("h2",{attrs:{id:"实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("client 客户端\n也就是浏览器端渲染的页面 这里会在服务端执行一遍, 浏览器也会执行一遍")]),t._v(" "),s("ol",[s("li",[t._v("服务端会在已经初始化好第三方依赖 module.js 后, 执行客户端代码, 将第三方依赖的代码初始化在 repo.js 里.")]),t._v(" "),s("li",[t._v("通过 repo 渲染 window.serverData (也就是页面配置数据).")]),t._v(" "),s("li",[t._v("通过 rollup 进行打包, 打包到 dist/shell.js 下, 目的是为了给服务端暴露渲染页面的方法 renderAppHtml, 并且让服务端基于 dist/shell.js 再次打包成 dist/bundle.js 做压缩")])]),t._v(" "),s("h4",{attrs:{id:"解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解释"}},[t._v("#")]),t._v(" 解释:")]),t._v(" "),s("p",[t._v("renderAppHtml 作用: 拿到页面配置, 和 public/index.html 的代码 , 通过 styled-components 的 ServerStyleSheet 方法, 做服务端渲染, 拆离节点和 css 并返回 包含页面节点和 css 的 html")])]),t._v(" "),s("li",[s("p",[t._v("server 服务端\n通过 express 做服务端, 设置路由 '/', 当我访问改地址时, 会执行如下逻辑")]),t._v(" "),s("ol",[s("li",[t._v("解析 activity.json 页面配置数据, 动态安装页面所需要的第三方配置到 dist/node_modules 下,")]),t._v(" "),s("li",[t._v("再通过 server/generator.js 下的 writeModuleFile 基于已经安装好的依赖会生成 module.js 将上面的依赖按照 cjs 的模式导出, module.js 的格式如下:")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TextBox_1_2_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@xmc/text-box-1.2.2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" modules "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"@xmc/text-box@1.2.2"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TextBox_1_2_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("ol",[s("li",[t._v("上面的依赖已经打包好了 可以开始进行打包页面了. 通过 webpack 对客户端的打包结果 dist/shell.js 进行打包, 基于 dist/shell.js 再次打包成 dist/bundle.js 做压缩")]),t._v(" "),s("li",[t._v("读取 public/index.html 代码, 通过 require 获取 dist/shell.js 的暴露渲染页面的方法 renderAppHtml")]),t._v(" "),s("li",[t._v("通过 renderAppHtml 拿到 完整版 html, 写入到 dist/index.html 下(目前没看到用处), 并且返回给浏览器, 浏览拿到 html, 会渲染节点,css, 并执行 dist/bundle.js, 也就是会再次执行 client/index.js 的代码")]),t._v(" "),s("li",[t._v("注意: 再次执行 client/index.js 会执行如下代码, 也就是基于服务端的渲染的页面, 再次执行渲染页面的逻辑")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" document "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" root "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hydrateRoot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serverData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])]),t._v(" "),s("h2",{attrs:{id:"结尾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结尾"}},[t._v("#")]),t._v(" 结尾")]),t._v(" "),s("p",[t._v("至此, 低代码的动态渲染功能已经完成了")])])}),[],!1,null,null,null);s.default=e.exports}}]);