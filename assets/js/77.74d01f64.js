(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{461:function(n,t,e){"use strict";e.r(t);var r=e(45),o=Object(r.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"_38-外观数列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_38-外观数列"}},[n._v("#")]),n._v(" 38. 外观数列")]),n._v(" "),e("p",[n._v('// 给定一个正整数 n ，输出外观数列的第 n 项。\n// 「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。\n// 你可以将其视作是由递归公式定义的数字字符串序列：\n// countAndSay(1) = "1"\n// countAndSay(n) 是对 countAndSay(n-1) 的描述，然后转换成另一个数字字符串。\n// 前五项如下：\n// 1.     1\n// 2.     11\n// 3.     21\n// 4.     1211\n// 5.     111221\n// 第一项是数字 1\n// 描述前一项，这个数是 1 即 “ 一 个 1 ”，记作 "11"\n// 描述前一项，这个数是 11 即 “ 二 个 1 ” ，记作 "21"\n// 描述前一项，这个数是 21 即 “ 一 个 2 + 一 个 1 ” ，记作 "1211"\n// 描述前一项，这个数是 1211 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 "111221"\nvar countAndSay = function (n) {\nlet str = \'1\'\nfor (let i = 1; i < n; i++) {\nstr = getStr(str)\n}')]),n._v(" "),e("p",[n._v("return str\n};")]),n._v(" "),e("p",[n._v("function getStr (str) {\nlet prev = ''\nlet arr = []\nfor (let i = 0; i < str.length; i++) {\nconst key = str[i]\nif (key !== prev) {\narr[arr.length] = { val: 1, key: key }\nprev = key\n} else {\narr[arr.length-1].val += 1\n}\n}")]),n._v(" "),e("p",[n._v("return arr.reduce((str, item) => {\nreturn str += (item.val + item.key)\n}, '')\n}")]),n._v(" "),e("p",[n._v("console.log(countAndSay('1')) // 1\nconsole.log(countAndSay('2')) // 11\nconsole.log(countAndSay('3')) // 21\nconsole.log(countAndSay('4')) // 1211\nconsole.log(countAndSay('5')) // 111221")])])}),[],!1,null,null,null);t.default=o.exports}}]);