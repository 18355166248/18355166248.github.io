(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{442:function(n,t,s){"use strict";s.r(t);var e=s(45),r=Object(e.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"_16-最接近的三数之和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-最接近的三数之和"}},[n._v("#")]),n._v(" 16. 最接近的三数之和")]),n._v(" "),s("p",[n._v("// 给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。")]),n._v(" "),s("p",[n._v("var threeSumClosest = function(nums, target) {\n// 先对数组进行排序, 为了后面双指针计算大小值做准备\nnums = nums.sort((a, b) => a - b);\nlet min = +Infinity,\nresult = 0;")]),n._v(" "),s("p",[n._v("for (let i = 0; i < nums.length; i++) {\n// 循环内部声明左右指针, 初始化 左指针位于索引下一个, 右指针位于数组最后一位索引\nlet left = i + 1,\nright = nums.length - 1;")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[n._v("// 结束条件为左右指针重合\nwhile (left < right) {\n  // 每次用3个索引计算合然后更新最小值\n  const sum = nums[i] + nums[left] + nums[right];\n  const res = sum - target;\n  if (Math.abs(res) < min) {\n    min = Math.abs(res);\n    result = sum;\n  }\n\n  // 如果合的值大于目标值target, 那么表示需要减少合值再计算, 所以右指针后退一位, 反之左指针前进一位\n  if (res >= 0) {\n    right--;\n  } else {\n    left++;\n  }\n}\n")])])]),s("p",[n._v("}")]),n._v(" "),s("p",[n._v("return result;\n};")]),n._v(" "),s("p",[n._v("const nums = [-1, 2, 1, -4],\ntarget = 1;")]),n._v(" "),s("p",[n._v("console.log(threeSumClosest(nums, target));")]),n._v(" "),s("p",[n._v("// 深度遍历 dfs\n// var threeSumClosest = function(nums, target) {\n//   let min = +Infinity,\n//     res = 0;\n//   obj = {};\n//   const dfs = function(arr, start) {\n//     if (arr.length === 3) {\n//       const sum = arr[0] + arr[1] + arr[2];\n//       const r = Math.abs(sum - target);\n//       if (r < min) {\n//         min = r;\n//         res = sum;\n//       }\n//       return;\n//     }\n//     for (let i = start; i < nums.length; i++) {\n//       if (i >= nums.length - 2 && arr.length === 0) break;\n//       if (obj[i]) continue;\n//       obj[i] = true;\n//       dfs([...arr, nums[i]], i + 1);\n//       obj[i] = false;\n//     }\n//   };")]),n._v(" "),s("p",[n._v("//   dfs([], 0);")]),n._v(" "),s("p",[n._v("//   return res;\n// };")])])}),[],!1,null,null,null);t.default=r.exports}}]);