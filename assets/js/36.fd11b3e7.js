(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{419:function(n,e,t){"use strict";t.r(e);var r=t(45),l=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_109-有序链表转换二叉搜索树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_109-有序链表转换二叉搜索树"}},[n._v("#")]),n._v(" 109. 有序链表转换二叉搜索树")]),n._v(" "),t("p",[n._v("function TreeNode(val, left, right) {\nthis.val = val === undefined ? 0 : val;\nthis.left = left === undefined ? null : left;\nthis.right = right === undefined ? null : right;\n}\nvar sortedListToBST = function(head) {\nconst arr = [];\nwhile (head) {\narr.push(head.val);\nhead = head.next;\n}")]),n._v(" "),t("p",[n._v("function dfs(treeArr, left, right) {\nif (left > right) return null;")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("const mid = Math.floor((left + right + 1) / 2);\nconst node = new TreeNode(treeArr[mid]);\n\nnode.left = dfs(treeArr, left, mid - 1);\nnode.right = dfs(treeArr, mid + 1, right);\n\nreturn node;\n")])])]),t("p",[n._v("}")]),n._v(" "),t("p",[n._v("return dfs(arr, 0, arr.length - 1);\n};\nconsole.log(\nsortedListToBST({\nval: -10,\nnext: {\nval: -3,\nnext: {\nval: 0,\nnext: {\nval: 5,\nnext: {\nval: 9,\n},\n},\n},\n},\n})\n);")])])}),[],!1,null,null,null);e.default=l.exports}}]);