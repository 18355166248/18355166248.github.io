(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{471:function(t,n,s){"use strict";s.r(n);var e=s(45),r=Object(e.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_5-最长回文子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-最长回文子串"}},[t._v("#")]),t._v(" 5. 最长回文子串")]),t._v(" "),s("p",[t._v('// 给你一个字符串 s，找到 s 中最长的回文子串\n// 示例 1：\n// 输入：s = "babad"\n// 输出："bab"\n// 解释："aba" 同样是符合题意的答案。\n// 示例 2：\n// 输入：s = "cbbd"\n// 输出："bb"')]),t._v(" "),s("p",[t._v('// 中心扩散的方式\n// 两种情况\n// 一种是回文字符串为单数\n// 一种是回文字符串为双数\nvar longestPalindrome = function(s) {\nif (s.length < 2) return s;\nlet str = "";')]),t._v(" "),s("p",[t._v("// 中心扩散的方式, 两种情况, 一种是中心字符串为单数 一种是中心字符串为双数\nfor (let i = 0; i < s.length; i++) {\ngetMaxStr(i, i);\ngetMaxStr(i, i + 1);\n}")]),t._v(" "),s("p",[t._v("function getMaxStr(left, right) {\nwhile (left >= 0 && right < s.length && s[left] === s[right]) {\nleft--;\nright++;\n}")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("if (right - left - 1 > str.length) {\n  str = s.slice(left + 1, right);\n}\n")])])]),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("return str;\n};")]),t._v(" "),s("p",[t._v('// const s = "cbbd";\nconst s = "babad";')]),t._v(" "),s("p",[t._v("console.log(longestPalindrome(s));")])])}),[],!1,null,null,null);n.default=r.exports}}]);