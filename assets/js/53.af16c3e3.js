(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{439:function(r,n,a){"use strict";a.r(n);var s=a(45),t=Object(s.a)({},(function(){var r=this,n=r.$createElement,a=r._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"_1424-对角线遍历-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1424-对角线遍历-ii"}},[r._v("#")]),r._v(" 1424. 对角线遍历 II")]),r._v(" "),a("p",[r._v('const { array } = require("yargs");')]),r._v(" "),a("p",[r._v("var findDiagonalOrder = function(nums) {\nlet arrays = [],\nresult = [];")]),r._v(" "),a("p",[r._v("for (let i = 0; i < nums.length; i++) {\n// for (let j = nums[i].length - 1; j >= 0; j--) {\n//   if (!arrays[i + j]) arrays[i + j] = [];\n//   arrays[i + j].push(nums[i][j]);\n// }\nfor (let j = 0; j < nums[i].length; j++) {\nif (!arrays[i + j]) arrays[i + j] = [];\narrays[i + j].push(nums[i][j]);\n}\n}")]),r._v(" "),a("p",[r._v("console.log(arrays);")]),r._v(" "),a("p",[r._v("arrays.forEach((array) => (result = result.concat(array)));")]),r._v(" "),a("p",[r._v("return result;\n};")]),r._v(" "),a("p",[r._v("const nums = [\n[1, 2, 3],\n[4, 5, 6],\n[7, 8, 9],\n];")]),r._v(" "),a("p",[r._v("console.log(findDiagonalOrder(nums));")])])}),[],!1,null,null,null);n.default=t.exports}}]);