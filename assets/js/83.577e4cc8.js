(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{469:function(n,t,e){"use strict";e.r(t);var r=e(45),s=Object(r.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"_45-跳跃游戏-ii"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_45-跳跃游戏-ii"}},[n._v("#")]),n._v(" 45. 跳跃游戏 II")]),n._v(" "),e("p",[n._v("// 给定一个非负整数数组，你最初位于数组的第一个位置。\n// 数组中的每个元素代表你在该位置可以跳跃的最大长度。\n// 你的目标是使用最少的跳跃次数到达数组的最后一个位置。\n// 假设你总是可以到达数组的最后一个位置。\nvar jump = function(nums) {\nlet n = 0;\nfunction getStep(arr, step) {\nif (arr.length === 1) {\nn = step;\nreturn;\n}\nconst total = arr.length;\nfor (let i = 0; i < arr.length; i++) {\nif (i + arr[i] + 1 >= total) {\nstep = getStep(arr.slice(0, i + 1), step + 1);\nbreak;\n}\n}")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("return step;\n")])])]),e("p",[n._v("}")]),n._v(" "),e("p",[n._v("getStep(nums, 0);")]),n._v(" "),e("p",[n._v("return n;\n};")]),n._v(" "),e("p",[n._v("console.log(jump([2, 3, 1, 1, 4])); // 2\nconsole.log(jump([2, 3, 0, 1, 4])); // 2\nconsole.log(jump([1, 3, 1, 2, 3, 1, 3, 2, 4])); // 4")])])}),[],!1,null,null,null);t.default=s.exports}}]);