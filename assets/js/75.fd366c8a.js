(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{462:function(n,e,r){"use strict";r.r(e);var t=r(45),a=Object(t.a)({},(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"_34-在排序数组中查找元素的第一个和最后一个位置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_34-在排序数组中查找元素的第一个和最后一个位置"}},[n._v("#")]),n._v(" 34. 在排序数组中查找元素的第一个和最后一个位置")]),n._v(" "),r("p",[n._v("// 给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。\n// 如果数组中不存在目标值 target，返回 [-1, -1]。\nvar searchRange = function(nums, target) {\nconst i = binarySearch(nums, target);")]),n._v(" "),r("p",[n._v("if (i === -1) return [-1, -1];\nelse {\nlet l = i,\nr = i + 1;\nwhile (nums[l] === target && l >= 0) l--;\nwhile (nums[r] === target && r < nums.length) r++;")]),n._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[n._v("return [l + 1, r - 1];\n")])])]),r("p",[n._v("}\n};")]),n._v(" "),r("p",[n._v("function binarySearch(\nnums,\ntarget,\nl = 0,\nr = nums.length - 1,\nm = (l + r) >>> 1\n) {\nreturn l > r\n? -1\n: nums[m] === target\n? m\n: nums[m] > target\n? binarySearch(nums, target, l, m - 1)\n: binarySearch(nums, target, m + 1, r);\n}\nconsole.log(searchRange([5, 7, 7, 8, 8, 10], 8));\nconsole.log(searchRange([5, 7, 7, 8, 8, 10], 6));\nconsole.log(searchRange([7, 7, 7, 7, 8, 9], 7));\nconsole.log(searchRange([1], 1));\nconsole.log(searchRange([2, 2], 2));\nconsole.log(searchRange([1, 3], 1));")])])}),[],!1,null,null,null);e.default=a.exports}}]);