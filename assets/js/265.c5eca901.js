(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{661:function(t,a,e){"use strict";e.r(a);var s=e(45),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"学习-antd-弹窗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习-antd-弹窗"}},[t._v("#")]),t._v(" 学习 antd 弹窗")]),t._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("看了 antd@4.X 的弹窗源码之后, 发现它的功能经过多次迭代后还是比较复杂的, 我们先学习它的基本功能, 完成一个简易版弹窗")]),t._v(" "),e("h2",{attrs:{id:"css-名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-名"}},[t._v("#")]),t._v(" css 名")]),t._v(" "),e("p",[t._v("全局会有一个 ConfigContext, 默认设置全局的类名前缀, 我们只需要通过 useContext 获取对应的 prefixCls 变量, 动态拼接类名即可")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" getPrefixCls "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("useContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ConfigContext"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prefixCls "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrefixCls")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cascade"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"设计-实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计-实现"}},[t._v("#")]),t._v(" 设计&实现")]),t._v(" "),e("p",[t._v("我们简单定义几个 props, 实现简单功能")]),t._v(" "),e("h3",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[e("code",[t._v("prop")])]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[e("code",[t._v("说明")])]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[e("code",[t._v("类型")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("children")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("弹窗内容")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("ReactNode")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("open")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("显示/隐藏")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("boolean")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("getContainer")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("指定 Modal 挂载的节点，但依旧为全局展示，false 为挂载在当前位置")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("document.body")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("title")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("弹窗标题")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("string")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("footer")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("底部内容，当不需要默认底部按钮时，可以设为 footer={null}")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("ReactNode")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("destroyOnClose")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("关闭时销毁 Modal 里的子元素")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("false")])])])]),t._v(" "),e("h3",{attrs:{id:"外部依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外部依赖"}},[t._v("#")]),t._v(" 外部依赖")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[e("code",[t._v("名称")])]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[e("code",[t._v("版本")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("react")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18.2.0")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("react-dom")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("18.2.0")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("classNames")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("2.3.2")])])])]),t._v(" "),e("h3",{attrs:{id:"组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),e("p",[t._v("Modal 组件我们组要将其分为两个部分, 一个是 Portal(传送门), 一个是 Dialog;\nPortal 主要负责的功能是状态管理和弹窗节点渲染逻辑的控制, 包裹渲染到指定 Dom 的功能\nDialog 主要负责的功能是弹窗的样式处理, 包含蒙层, 类名初始化, 标题, 尾部, 内容区域的渲染")]),t._v(" "),e("h4",{attrs:{id:"portal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#portal"}},[t._v("#")]),t._v(" Portal")]),t._v(" "),e("p",[t._v("是否使用 react 的传送门 createPortal 方法, 取决于用户是否期望指定 Modal 挂载的节点, 也就是 getContainer 参数支付赋值并符合规则")]),t._v(" "),e("p",[t._v("在这里面重点需要注意的是我们使用了自定义 hook, useDom")]),t._v(" "),e("p",[t._v("useDom 主要是处理节点渲染和销毁的功能, 内部还实现了一个队列的概念, 具体是做啥的我还没仔细研究")]),t._v(" "),e("h4",{attrs:{id:"destroyonclose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#destroyonclose"}},[t._v("#")]),t._v(" destroyOnClose")]),t._v(" "),e("p",[t._v("destroyOnClose 的实现其实很简单, 就是在组件入口的地方判断一下")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭是否销毁子元素")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("destroyOnClose "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("open"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"结尾"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#结尾"}},[t._v("#")]),t._v(" 结尾")]),t._v(" "),e("p",[t._v("文章比较简单, 具体实现细节可以查看 "),e("a",{attrs:{href:"https://github.com/18355166248/jiang-design/tree/main/src/components/Modal",target:"_blank",rel:"noopener noreferrer"}},[t._v("jiang-design"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("线上访问: "),e("a",{attrs:{href:"https://18355166248.github.io/jiang-design/components/common/modal",target:"_blank",rel:"noopener noreferrer"}},[t._v("地址"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);