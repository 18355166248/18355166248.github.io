(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{467:function(n,t,r){"use strict";r.r(t);var e=r(45),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,r=n._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("h1",{attrs:{id:"_46-全排列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_46-全排列"}},[n._v("#")]),n._v(" 46. 全排列")]),n._v(" "),r("p",[n._v("// 给定一个不含重复数字的数组 nums ，返回其 所有可能的全排列 。你可以 按任意顺序 返回答案。")]),n._v(" "),r("p",[n._v("// 输出：\n// 示例 2：\n// 输入：nums = [0,1]\n// 输出：[[0,1],[1,0]]\n// 示例 3：\n// 输入：nums = [1]\n// 输出：[[1]]\nvar permute = function(nums) {\nconst length = nums.length;\nconst obj = {};\nconst totalArr = [];\nfunction dfs(arr) {\nif (arr.length === length) return totalArr.push(arr);\nfor (let i = 0; i < length; i++) {\nif (obj[i]) continue;\nobj[i] = true;\ndfs([...arr, nums[i]]);\nobj[i] = false;\n}\n}")]),n._v(" "),r("p",[n._v('dfs("");')]),n._v(" "),r("p",[n._v("return totalArr;\n};\nconsole.log(permute([1, 2, 3])); // [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]")])])}),[],!1,null,null,null);t.default=s.exports}}]);