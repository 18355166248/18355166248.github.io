(window.webpackJsonp=window.webpackJsonp||[]).push([[417],{755:function(t,e,s){"use strict";s.r(e);var a=s(14),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"ts文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ts文档"}},[t._v("#")]),t._v(" TS文档")]),t._v(" "),e("h2",{attrs:{id:"ts-reference-path-类型声明文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ts-reference-path-类型声明文件"}},[t._v("#")]),t._v(" ts reference path 类型声明文件")]),t._v(" "),e("p",[t._v("TypeScript 作为 JavaScript 的超集，在开发过程中不可避免要引用其他第三方的 JavaScript 的库。虽然通过直接引用可以调用库的类和方法，但是却无法使用 TypeScript 诸如类型检查等特性功能。为了解决这个问题，需要将这些库里的函数和方法体去掉后只保留导出类型声明，而产生了一个描述 JavaScript 库和模块信息的声明文件。通过引用这个声明文件，就可以借用 TypeScript 的各种特性来使用库文件了。")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/// <reference path="../../../type.d.ts" />')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);