(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{444:function(n,t,e){"use strict";e.r(t);var s=e(45),u=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"_18-四数之和"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-四数之和"}},[n._v("#")]),n._v(" 18. 四数之和")]),n._v(" "),e("p",[n._v("// 给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。")]),n._v(" "),e("p",[n._v("// 注意：答案中不可以包含重复的四元组。\nvar fourSum = function(nums, target) {\nconst length = nums.length\nif (length === 0) return []")]),n._v(" "),e("p",[n._v("nums = nums.sort((a, b) => a - b)\nconst res = []")]),n._v(" "),e("p",[n._v("for (let i = 0; i < length - 3; i++) {\nif (i > 0 && nums[i] === nums[i - 1]) continue")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("if (nums[i] + nums[i + 1] + nums[i + 2] + nums[i + 3] > target) break // 确定i索引, 后面的几个值总和大于target 那么后面的值不可能存在等于target的情况\nif (\n  nums[i] + nums[length - 3] + nums[length - 2] + nums[length - 1] <\n  target\n)\n  continue // 确定i索引, 最后的几个值总和小于于target 那么后面的值不可能存在等于target的情况\n\nfor (let j = i + 1; j < length - 2; j++) {\n  if (j > i + 1 && nums[j] === nums[j - 1]) continue\n\n  if (nums[i] + nums[j] + nums[j + 1] + nums[j + 2] > target) break\n  if (nums[i] + nums[j] + nums[length - 2] + nums[length - 1] < target)\n    continue\n\n  let left = j + 1,\n    right = length - 1\n\n  while (left < right) {\n    const sum = nums[i] + nums[j] + nums[left] + nums[right]\n\n    if (sum === target) {\n      res.push([nums[i], nums[j], nums[left], nums[right]])\n\n      while (left < right && nums[left] === nums[left + 1]) left++\n      left++\n      while (left < right && nums[right] === nums[right - 1]) right--\n      right--\n    } else if (sum < target) left++\n    else right--\n  }\n}\n")])])]),e("p",[n._v("}")]),n._v(" "),e("p",[n._v("return res\n}")]),n._v(" "),e("p",[n._v("const nums = [1, 0, -1, 0, -2, 2],\ntarget = 0")]),n._v(" "),e("p",[n._v("const nums1 = [2, 2, 2, 2, 2],\ntarget1 = 8")]),n._v(" "),e("p",[n._v("console.log(fourSum(nums, target))\nconsole.log(fourSum(nums1, target1))")])])}),[],!1,null,null,null);t.default=u.exports}}]);