(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{484:function(n,o,s){"use strict";s.r(o);var t=s(45),e=Object(t.a)({},(function(){var n=this,o=n.$createElement,s=n._self._c||o;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"_6-z字形变换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-z字形变换"}},[n._v("#")]),n._v(" 6.Z字形变换")]),n._v(" "),s("p",[n._v('const s = "PAYPALISHIRING";')]),n._v(" "),s("p",[n._v('// 边界条件 如果numsRows等于1 表示结果就为s 直接返回\n// 去字符串长度和行数中的最大值, 如果行数大于字符串最大值, 直接返回\n// 先设置rows表示总共有几行数据\n// 定义loc表示当前在第几行, down表示这一列是否循环结束\n// 如果当前行是在第一行或者在最后一行, 那么down就需要改变相反状态\n// 如果down是true的话表示向下(行)加1, 如果down为false, 表示向上(行)减一\nvar convert = function(s, numRows) {\nif (numRows === 1 || numRows >= s.length) return s;\nconst len = s.length;\nconst rows = [];\nfor (let i = 0; i < len; i++) rows[i] = "";')]),n._v(" "),s("p",[n._v("let loc = 0;\nlet down = false;")]),n._v(" "),s("p",[n._v("for (let c of s) {\nrows[loc] += c;")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[n._v("if (loc === 0 || loc === numRows - 1) down = !down;\nloc += down ? 1 : -1;\n")])])]),s("p",[n._v("}")]),n._v(" "),s("p",[n._v('return rows.join("");\n};')]),n._v(" "),s("p",[n._v("convert(s, 5);")])])}),[],!1,null,null,null);o.default=e.exports}}]);