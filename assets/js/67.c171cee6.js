(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{451:function(n,t,e){"use strict";e.r(t);var l=e(45),r=Object(l.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"_27-移除元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_27-移除元素"}},[n._v("#")]),n._v(" 27. 移除元素")]),n._v(" "),e("p",[n._v("// 给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。\n// 不要使用额外的数组空间，你必须仅使用 O(1) 额外空间并 原地 修改输入数组。\n// 元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。\nvar removeElement = function(nums, val) {\nlet left = 0;\nfor (let i = 0; i < nums.length; i++) {\nif (nums[i] !== val) nums[left++] = nums[i];\n}")]),n._v(" "),e("p",[n._v("return left;\n};")]),n._v(" "),e("p",[n._v("const arr = [3, 2, 2, 3],\nval = 3;")]),n._v(" "),e("p",[n._v("console.log(removeElement(arr, val));\nconsole.log(arr);")])])}),[],!1,null,null,null);t.default=r.exports}}]);