(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{669:function(e,t,r){"use strict";r.r(t);var a=r(14),s=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[e._v("#")]),e._v(" Git")]),e._v(" "),t("h2",{attrs:{id:"git-reset-与-revert-区别-revert-多个-mr-该如何处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-与-revert-区别-revert-多个-mr-该如何处理"}},[e._v("#")]),e._v(" git reset 与 revert 区别，revert 多个 mr 该如何处理")]),e._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[e._v("点击")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://git-scm.com/docs/git-revert",target:"_blank",rel:"noopener noreferrer"}},[e._v("git revert"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[t("p",[e._v("revert 常规 commit\n使用 git revert 即可，git 会生成一个新的 commit，将指定的 commit 内容从当前分支上撤除。")])]),e._v(" "),t("li",[t("p",[e._v("revert merge commit\nrevert merge commit 有一些不同，这时需要添加 -m 选项以代表这次 revert 的是一个 merge commit")]),e._v(" "),t("p",[e._v("我们要 revert will-be-revert 分支上的内容，即 保留主分支，应该设置主分支为主线，操作如下：")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("--")]),e._v(" 需要注意的是 "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("m 选项接收的参数是一个数字，数字取值为 "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" 和 "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("，也就是 Merge 行里面列出来的第一个还是第二个。\n  git revert "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("m "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" bd86846\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])])])]),e._v(" "),t("h3",{attrs:{id:"revert-之后重新上线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#revert-之后重新上线"}},[e._v("#")]),e._v(" revert 之后重新上线")]),e._v(" "),t("p",[e._v("假设狗蛋在自己分支 goudan/a-cool-feature 上开发了一个功能，并合并到了 master 上，之后 master 上又提交了一个修改 h，这时提交历史如下：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("a -> b -> c -> f -- g -> h (master)\n           \\      /\n            d -> e   (goudan/a-cool-feature)\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("突然，大家发现狗蛋的分支存在严重的 bug，需要 revert 掉，于是大家把 g 这个 merge commit revert 掉了，记为 G，如下：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("a -> b -> c -> f -- g -> h -> G (master)\n           \\      /\n            d -> e   (goudan/a-cool-feature)\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("然后狗蛋回到自己的分支进行 bugfix，修好之后想重新合并到 master，直觉上只需要再 merge 到 master 即可（或者使用 cherry-pick），像这样：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("a -> b -> c -> f -- g -> h -> G -> i (master)\n           \\      /               /\n            d -> e -> j -> k ----    (goudan/a-cool-feature)\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("i 是新的 merge commit。但需要注意的是，这 不能 得到我们期望的结果。因为 d 和 e 两个提交曾经被丢弃过，如此合并到 master 的代码，并不会重新包含 d 和 e 两个提交的内容，相当于只有 goudan/a-cool-feature 上的新 commit 被合并了进来，而 goudan/a-cool-feature 分支之前的内容，依然是被 revert 掉了。")]),e._v(" "),t("p",[e._v("所以，如果想恢复整个 goudan/a-cool-feature 所做的修改，应该先把 G revert 掉：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("a -> b -> c -> f -- g -> h -> G -> G' -> i (master)\n           \\      /                     /\n            d -> e -> j -> k ----------    (goudan/a-cool-feature)\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("其中 G' 是对 G 的 revert 操作生成的 commit，把之前撤销合并时丢弃的代码恢复了回来，然后再 merge 狗蛋的分支，把解决 bug 写的新代码合并到 master 分支。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);