(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{449:function(n,l,t){"use strict";t.r(l);var e=t(45),o=Object(e.a)({},(function(){var n=this,l=n.$createElement,t=n._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_2-两数相加"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-两数相加"}},[n._v("#")]),n._v(" 2. 两数相加")]),n._v(" "),t("p",[n._v("// 给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。")]),n._v(" "),t("p",[n._v("// 请你将两个数相加，并以相同形式返回一个表示和的链表。")]),n._v(" "),t("p",[n._v("// 你可以假设除了数字 0 之外，这两个数都不会以 0 开头。\nvar addTwoNumbers = function(l1, l2) {\nif (l1 === null) return l2;\nif (l2 === null) return l1;\nconst parentRoot = {};\nlet root = parentRoot;")]),n._v(" "),t("p",[n._v("add(0);")]),n._v(" "),t("p",[n._v("function add(index) {\nconst l1V = l1 ? l1.val : 0;\nconst l2V = l2 ? l2.val : 0;\nconst val = l1V + l2V + index;")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("const h = Math.floor(val / 10);\nconst number = val % 10;\n\nroot.next = { val: number, next: null };\nroot = root.next;\n\nl1 = l1 ? l1.next : null;\nl2 = l2 ? l2.next : null;\n\nif (l1 || l2) add(h);\nelse if (h > 0) {\n  root.next = { val: h, next: null };\n}\n")])])]),t("p",[n._v("}")]),n._v(" "),t("p",[n._v("return parentRoot.next;\n};")]),n._v(" "),t("p",[n._v("const l1 = { val: 2, next: { val: 4, next: { val: 3, next: null } } };\nconst l2 = { val: 4, next: { val: 6, next: { val: 4, next: null } } };")]),n._v(" "),t("p",[n._v("console.log(addTwoNumbers(l1, l2));")])])}),[],!1,null,null,null);l.default=o.exports}}]);