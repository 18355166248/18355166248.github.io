(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{450:function(n,e,t){"use strict";t.r(e);var l=t(45),a=Object(l.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_24-两两交换链表中的节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24-两两交换链表中的节点"}},[n._v("#")]),n._v(" 24. 两两交换链表中的节点")]),n._v(" "),t("p",[n._v("// 给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。")]),n._v(" "),t("p",[n._v("// 你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。\nvar swapPairs = function(head) {\nif (head === null) return null\nif (head.next === null) return head\nconst prevLine = { next: head }\nhead = prevLine\nlet left = head.next\nlet right = left.next")]),n._v(" "),t("p",[n._v("while (left && right) {\nconst nextLine = right.next\nhead.next = right\nhead.next.next = left\nhead = head.next.next\nleft = nextLine\nright = left ? left.next : null\n}")]),n._v(" "),t("p",[n._v("head.next = left ? left : right")]),n._v(" "),t("p",[n._v("return prevLine.next\n}")]),n._v(" "),t("p",[n._v("const line = {\nval: 1,\nnext: { val: 2, next: { val: 3, next: { val: 4, next: null } } },\n}\nconst line2 = {\nval: 1,\nnext: { val: 2, next: { val: 3, next: null } },\n}")]),n._v(" "),t("p",[n._v("console.log(JSON.stringify(swapPairs(line)))\nconsole.log(JSON.stringify(swapPairs(line2)))")])])}),[],!1,null,null,null);e.default=a.exports}}]);