(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{420:function(t,n,e){"use strict";e.r(n);var r=e(45),s=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_108-将有序数组转换为二叉搜索树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_108-将有序数组转换为二叉搜索树"}},[t._v("#")]),t._v(" 108. 将有序数组转换为二叉搜索树")]),t._v(" "),e("p",[t._v("function TreeNode(val, left, right) {\nthis.val = val === undefined ? 0 : val\nthis.left = left === undefined ? null : left\nthis.right = right === undefined ? null : right\n}")]),t._v(" "),e("p",[t._v("var sortedArrayToBST = function(nums) {\nreturn dfs(nums, 0, nums.length - 1)")]),t._v(" "),e("p",[t._v("function dfs(nums, left, right) {\nif (left > right) return null")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("const mid = Math.ceil((left + right) / 2)\nconst root = new TreeNode(nums[mid])\nroot.left = dfs(nums, left, mid - 1)\nroot.right = dfs(nums, mid + 1, right)\nreturn root\n")])])]),e("p",[t._v("}\n}")]),t._v(" "),e("p",[t._v("console.log(sortedArrayToBST([-10, -3, 0, 5, 9]))")])])}),[],!1,null,null,null);n.default=s.exports}}]);