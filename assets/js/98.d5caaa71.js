(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{482:function(n,t,i){"use strict";i.r(t);var s=i(45),e=Object(s.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"_62-不同路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_62-不同路径"}},[this._v("#")]),this._v(" 62. 不同路径")]),this._v(" "),t("p",[this._v("// 一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。\n// 机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。\n// 问总共有多少条不同的路径？\nvar uniquePaths = function(m, n) {\nconst matrix = Array.from({ length: m }, () => Array(n).fill(0))\nfor (let i = 0; i < m; i++) {\nfor (let j = 0; j < n; j++) {\n// i或者j为0表示只能往下或者右移动一格, 所有都是1\nif (i === 0 || j === 0) {\nmatrix[i][j] = 1\n} else {\nmatrix[i][j] = matrix[i - 1][j] + matrix[i][j - 1]\n}\nif (i === m - 1 && j === n - 1) return matrix[i][j]\n}\n}\n}\nconsole.log(uniquePaths(3, 2))\nconsole.log(uniquePaths(3, 7))\nconsole.log(uniquePaths(7, 3))\nconsole.log(uniquePaths(3, 3))\nconsole.log(uniquePaths(19, 13))\nconsole.log(uniquePaths(1, 2))")])])}),[],!1,null,null,null);t.default=e.exports}}]);